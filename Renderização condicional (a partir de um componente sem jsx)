
Usando um modulo que não usa JSX ou react ou react-native para usar o children

modulo if.js \/

//componente não vai utilizar JSX
//não precisamos realizar o import do react e do react-native


export default props => {
    if(props.teste) {
        return props.children
    } else {
        return false 
    }
}

modulo UsuarioLogado.js \/

//modelo criado para o modulo "if.js"

import React, { useState } from 'react'
import { View, Text, Button } from 'react-native'
import Estilo from './estilo'
import If from './If'


//repare como estamos usand oo if que é do modulo if.js
export default props => {
    const usuario = props.usuario || {}
    return (       
        //<If teste={usuario && usuario.nome && usuario.email>  se algum desses estiver vazio
        //ele não vai apresentar na tela !!
        <>
        <If teste={usuario && usuario.nome && usuario.email}> 
            <Text style={Estilo.exercicio}>Usuario logado:</Text>           
            <Text style={Estilo.exercicio}>{usuario.nome} - {usuario.email} </Text>   
            </If>         
        </>
    )
}

App.js \/

import React from 'react'
import { SafeAreaView, Text } from 'react-native'
import { StyleSheet } from 'react-native' //StyleSheet é tipo css
import Usuariologado from './components/Usuariologado'  


//reparem que se nós não passarmos algo dentro dos parametros nada vai ser apresentado a tela
//só vai ser apresentado na tela se tudo estiver preenchido corretamente
//isso gradas ao modulo "if.js"
export default () => ( 
   <SafeAreaView style={style.NomeQueEuQueira}>

      {/* passando objeto literal como parametro */}
      <Usuariologado usuario={  {nome: 'Vitor', email: 'Vitorbrussolo@gmail.com'}  }/>
      <Usuariologado usuario={  {nome: 'Vi', email: ''}  }/>
   </SafeAreaView> 
)

const style = StyleSheet.create({
   NomeQueEuQueira: {
      backgroundColor: '#FFFAFA',
      flex: 1,      
      justifyContent: "center",
      alignItems: "center",
      padding: 20
   }
})


